module.exports = {
  root: true,
  env: {
    node: true,
    es6: true,
  },
  extends: ['airbnb-base', 'plugin:import/errors', 'plugin:vue/recommended'],
  parserOptions: {
    parser: 'babel-eslint',
    ecmaVersion: 6,
  },
  rules: {
    'no-shadow': ['error', { allow: ['state'] }],
    'vue/no-v-html': 'off',
    'vue/comment-directive': 'off',
    'import/extensions': 'off',
    'import/no-unresolved': 'off',
    'vue/attribute-hyphenation': 'off',
    'comma-dangle': ['error', 'only-multiline'],
    'no-param-reassign': [
      'error',
      {
        props: true,
        ignorePropertyModificationsFor: ['state'],
      },
    ],
    'vue/attributes-order': [
      'error',
      {
        order: [
          'DEFINITION',
          'LIST_RENDERING',
          'CONDITIONALS',
          'TWO_WAY_BINDING',
          'RENDER_MODIFIERS',
          'UNIQUE',
          'OTHER_DIRECTIVES',
          ['OTHER_ATTR', 'GLOBAL'],
          'CONTENT',
          'EVENTS',
        ],
        alphabetical: false,
      },
    ],
    'vue/order-in-components': [
      'error',
      {
        order: [
          'el',
          'name',
          'key',
          'LIFECYCLE_HOOKS',
          'parent',
          'functional',
          ['delimiters', 'comments'],
          'extends',
          ['provide', 'inject'],
          'ROUTER_GUARDS',
          'layout',
          'middleware',
          'validate',
          'scrollToTop',
          'transition',
          'loading',
          'inheritAttrs',
          'model',
          ['props', 'propsData'],
          'emits',
          'setup',
          'asyncData',
          'data',
          'fetch',
          'head',
          'computed',
          'watchQuery',
          'methods',
          'watch',
          ['template', 'render'],
          'renderError',
          ['mixins', 'directives', 'filters', 'components'],
        ],
      },
    ],
    // 'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
  },
  overrides: [
    {
      files: ['**/__tests__/*.{j,t}s?(x)', '**/tests/unit/**/*.spec.{j,t}s?(x)'],
      env: {
        jest: true,
      },
    },
  ],
};
